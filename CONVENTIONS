--------------------------------------------------------------------------------
Coordinate systems
--------------------------------------------------------------------------------

Tmp3D uses column-vectors conceptually, but they are transposed to row-vectors
before getting written in the memory to leverage CPU cache.

A right-handed coordinate system is used, and the untransformed camera is
situated at the origin <0, 0, 0>, looking towards +z.

         _ +z
         /|
        /
       /
  <0, 0, 0> -----> +x
      |
      |
      |
     \|/
      +y

The projection plane has its center at <0, 0, zNear>, where `zNear' is
determined by the vertical FOV (`fovy'), where:

           screenHeight
zNear = -------------------
         2 * tan(fovy / 2)

           +z
      _______
     |       |
     |__/____|
       /
  <0, 0, 0> ----> +x
      |
      |
      |
     \|/
      +y

The camera has two degrees of freedom and its rotations use Rodrigues'
Axis-angle representation. The yaw is always followed by the pitch. The positive
rotations follow the right-hand rule as well: they are clockwise when looking
towards the positive direction of that particular axis.

The screen-space origin is at <0, 0> and the +y points downwards.

<0, 0>-------------> +x
   |           |
   |           |
   |___________|
   |
  \|/
   +y

The triangles facing the camera have counter-clockwise winding.

      /\
     /  \
    /    \
   /      \
  /   â†º    \
 /          \
/____________\

--------------------------------------------------------------------------------
Renderer
--------------------------------------------------------------------------------

The renderer has no sub-pixel accuracy, the screen coordinates are strictly
integers.

The triangle rasterization routines follow the "top-left" coverage rule (as seen
in OpenGL and D3D):

Every pixel that falls inside the triangle is drawn--A pixel is assumed to be
inside the triangle if it satisfies the the top-left rule:

- A pixel is considered to lie inside the triangle if its center lies completely
  inside the triangle, without touching any of the edges except for the "top"
  and "left" edges.
- A top edge is above all of the other edges and is perfectly horizontal.
- A left edge is any edge that is not perfectly horizontal and is on the left of
  the triangle. At most two edges in a triangle can be identified as a left
  edge.

The top-left rule guarantees that pixels that are shared by two adjacent
triangles are drawn exactly once.
